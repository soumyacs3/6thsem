!pip install wikipedia-api
from pydantic import BaseModel
import wikipediaapi

class InstitutionDetails(BaseModel):
    name: str
    founder: str
    founded: str
    branches: str
    employees: str
    summary: str

def extract_info(content, keyword):
    for line in content.split('\n'):
        if keyword.lower() in line.lower():
            return line.strip()
    return "Not available"

def fetch(institution_name):
    user_agent = "InstitutionInfoFetcher/1.0 (https://example.com; contact@example.com)"
    wiki = wikipediaapi.Wikipedia('en', headers={"User-Agent": user_agent})
    page = wiki.page(institution_name)

    if not page.exists():
        raise ValueError(f"No Wikipedia page found for '{institution_name}'")

    content = page.text
    founder = extract_info(content, "founder")
    founded = extract_info(content, "founded") or extract_info(content, "established")
    branches = extract_info(content, "branch")
    employees = extract_info(content, "employee")
    summary = "\n".join(content.split('\n')[:2])

    return InstitutionDetails(
        name=institution_name,
        founder=founder,
        founded=founded,
        branches=branches,
        employees=employees,
        summary=summary
    )

if __name__ == "__main__":
    try:
        a=input("enter the institution name")
        details = fetch(a)
        print("\nExtracted Institution Details:")
        print(details.model_dump_json(indent=4))
    except Exception as e:
        print(f"Error: {e}")
