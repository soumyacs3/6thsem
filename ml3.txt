PROGRAM 3 
 
Develop a program to implement Principal Component Analysis (PCA) for reducing the 
dimensionality of the Iris dataset from 4 features to 2. 
 
import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt 
from sklearn.decomposition import PCA 
from sklearn.datasets import load_iris 
from sklearn.preprocessing import StandardScaler 
# Step 1: Load the Iris dataset 
iris = load_iris() 
X = iris.data  # Features 
y = iris.target  # Labels 
# Step 2: Standardize the features (important for PCA) 
scaler = StandardScaler() 
X_scaled = scaler.fit_transform(X) 
# Step 3: Apply PCA to reduce dimensionality from 4 to 2 
pca = PCA(n_components=2) 
X_pca = pca.fit_transform(X_scaled) 
# Step 4: Visualize the 2D projection of the data 
plt.figure(figsize=(8, 6)) 
# Create a scatter plot of the 2D projection, color points by their true labels 
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=y, cmap='viridis', edgecolor='k', s=50) 
# Add labels and title 
plt.xlabel('Principal Component 1') 
plt.ylabel('Principal Component 2') 
plt.title('PCA - Iris Dataset (Reduced to 2 Dimensions)') 
# Show color bar to map the colors to classes 
plt.colorbar(label='Iris Species') 
# Show the plot 
plt.show() 
# Step 5: Print explained variance ratio for each component 
print('Explained variance ratio for each component:', pca.explained_variance_ratio_)